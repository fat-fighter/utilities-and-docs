#!/usr/bin/python

import sys
import dbus
import dbus.mainloop.glib

from gi.repository import GLib


def dbus_to_python(data):
    if isinstance(data, (dbus.String, dbus.ObjectPath)):
        data = str(data)

    elif isinstance(data, dbus.Boolean):
        data = bool(data)

    elif isinstance(data, dbus.Byte):
        data = int(data)

    elif isinstance(data, (dbus.Int16, dbus.Int64, dbus.Int32)):
        data = int(data)

    elif isinstance(data, (dbus.UInt16, dbus.UInt32, dbus.UInt64)):
        data = int(data)

    elif isinstance(data, dbus.Double):
        data = float(data)

    elif isinstance(data, dbus.Array):
        data = [dbus_to_python(value) for value in data]

    elif isinstance(data, dbus.Dictionary):
        new_data = dict()
        for key, item in data.items():
            new_data[dbus_to_python(key)] = dbus_to_python(item)
        data = new_data

    return data


def property_changed(interface, changed, invalidated, path):
    iface = interface[interface.rfind(".") + 1 :]
    path = str(path)

    changed = dbus_to_python(changed)
    for name, value in changed.items():
        print("{%s} [%s] %s = %s" % (iface, path, name, value))

    try:
        sys.stdout.flush()
    except BrokenPipeError:
        pass


if __name__ == "__main__":
    dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)

    bus = dbus.SystemBus()

    manager = dbus.Interface(
        bus.get_object("org.bluez", "/"), "org.freedesktop.DBus.ObjectManager"
    )

    objects = manager.GetManagedObjects()

    for path in objects.keys():
        interfaces = objects[path]

        for interface in interfaces.keys():
            if interface in [
                "org.freedesktop.DBus.Introspectable",
                "org.freedesktop.DBus.Properties",
            ]:
                continue

            properties = interfaces[interface]

            if "Connected" in properties and not properties["Connected"]:
                continue

            property_changed(interface, properties, "", path)

    bus.add_signal_receiver(
        property_changed,
        bus_name="org.bluez",
        dbus_interface="org.freedesktop.DBus.Properties",
        signal_name="PropertiesChanged",
        path_keyword="path",
    )

    mainloop = GLib.MainLoop()
    mainloop.run()
