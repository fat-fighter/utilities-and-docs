#!/usr/bin/python

import sys
import dbus
import dbus.mainloop.glib

from gi.repository import GLib


def extract_list(list):
    val = "["
    for i in list:
        if type(i).__name__ == "Dictionary":
            val = extract_values(i)
        else:
            val += " " + str(i)
    val += " ]"
    return val


def extract_values(values):
    val = "{"
    for key in values.keys():
        val += " " + key + "="
        if key in ["PrefixLength"]:
            val += "%s" % (int(values[key]))
        elif key in ["IPv4", "IPv6", "Ethernet"]:
            val += extract_values(values[key])
        elif key in ["AllowedBearers"]:
            val += extract_list(values[key])
        else:
            if key in ["Servers", "Excludes"]:
                val += extract_list(values[key])
            else:
                val += str(values[key])
    val += " }"
    return val


def extract(name, value):
    val = None

    if name in ["Strength", "Priority"]:
        val = int(value)
    elif name in ["IPv4", "IPv6", "Ethernet", "Proxy"]:
        val = extract_values(value)
    elif name in ["Services", "Technologies", "Nameservers", "Domains", "Timeservers"]:
        val = extract_list(value)
    else:
        val = str(value)

    return val


def property_changed(name, value, path, interface):
    iface = interface[interface.rfind(".") + 1 :]
    val = extract(name, value)

    print("{%s} [%s] %s = %s" % (iface, path, name, val))
    try:
        sys.stdout.flush()
    except BrokenPipeError:
        pass


if __name__ == "__main__":
    dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)

    bus = dbus.SystemBus()

    path = "/net/connman/technology/wifi"
    iname = "net.connman.Technology"

    tech = bus.get_object("net.connman", path)
    iface = dbus.Interface(tech, iname)

    props = iface.GetProperties()
    for prop in props:
        if prop in ["Powered", "Connected"]:
            property_changed(prop, props[prop], path=path, interface=iname)

    iface.connect_to_signal(
        "PropertyChanged",
        property_changed,
        path_keyword="path",
        interface_keyword="interface",
    )

    GLib.MainLoop().run()
