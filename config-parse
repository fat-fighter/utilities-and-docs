#! /usr/bin/python2

import re
import os
import sys

def read_file(path):
    try:
        with open(path, "r") as f:
            return f.read(), os.path.dirname(os.path.abspath(path))
    except IOError:
        print "%s: Either file is missing or cannot be read" % path
        exit(1)

def translate_command(var, mapping):
    if var not in mapping:
        print "Warning: mapping for %s not found" % var
        return ""
    else:
        return mapping[var]

def parse_translations(path):
    try:
        text, dir = read_file(path)
        text = text.split("\n")

        mappings = []
        for line in text:
            if line.strip() == "":
                continue

            var, translation = map(lambda x: x.strip(), line.split("="))

            if var == "load":
                mappings += parse_translations(dir + "/" + translation)
            else:
                mappings += [(var, translation)]
    except ValueError:
        print "There was some error while parsing the mappings file"
        exit(1)

    return mappings

def main():
    args = sys.argv

    if len(args) != 3:
        print "Error: Invalid arguments"
        print
        print "Usage: %s <raw-file> <translations-file>" % sys.argv[0]
        exit(1)

    raw_text = read_file(args[1])[0]
    var_mappings = dict(parse_translations(args[2]))

    parsed_text = re.sub(r'{{(.*?)}}', lambda m: translate_command(m.group(1), var_mappings), raw_text)
    print parsed_text

if __name__ == "__main__":
    main()
